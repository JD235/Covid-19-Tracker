{"version":3,"sources":["InfoBox.js","Table.js","util.js","Map.js","LineGraph.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["InfoBox","title","cases","total","active","isRed","props","infoBox__casess","Card","className","onClick","CardContent","Typography","color","Table","countries","map","country","numeral","format","casesTypeColors","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","Circle","center","countryInfo","lat","long","fillOpacity","pathOptions","fillColor","radius","Math","sqrt","Popup","style","backgroundImage","flag","prettyPrintStat","stat","Map","zoom","useState","setmap","flyTo","whenCreated","TileLayer","url","attribution","COLORS","BORDER_COLOR","options","plugins","legend","display","tooltips","mode","intersect","callbacks","label","tooltipItem","value","maintainAspectRatio","responsive","elements","line","fill","point","hitRadius","scales","xAxes","gridLines","type","time","tooltipFormat","yAxes","ticks","callback","index","values","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","setData","useEffect","getHistoricalData","fetch","response","json","length","datasets","backgroundColor","borderColor","tension","Footer","marginLeft","href","target","class","aria-hidden","marginRight","App","setCountries","setCountry","setCountryInfo","tableData","setTableData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","setCasesType","getCountriesData","getAllCountriesData","name","iso2","onCountryChange","e","countryCode","console","log","then","xmlns","width","height","viewBox","id","transform","data-name","cx","cy","rx","ry","d","FormControl","Select","variant","onChange","MenuItem","todayCases","todayRecovered","todayDeaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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,UACHE,YAAU,UACVK,EAAE,iLACFN,UAAU,uBACVtE,KAAK,YAET,sBACIqE,GAAG,UACHE,YAAU,UACVK,EAAE,iMACFN,UAAU,0BACVtE,KAAK,YAET,sBACIqE,GAAG,UACHE,YAAU,UACVK,EAAE,gMACFN,UAAU,2BACVtE,KAAK,YAET,sBACIqE,GAAG,UACHE,YAAU,UACVK,EAAE,wLACFN,UAAU,2BACVtE,KAAK,YAET,sBACIqE,GAAG,UACHE,YAAU,UACVK,EAAE,kMACFN,UAAU,2BACVtE,KAAK,YAET,sBACIqE,GAAG,UACHE,YAAU,UACVK,EAAE,mMACFN,UAAU,0BACVtE,KAAK,YAET,yBACIqE,GAAG,YACHE,YAAU,YACVC,GAAG,OACHC,GAAG,MACHC,GAAG,OACHC,GAAG,MACHL,UAAU,uBACVtE,KAAK,eAGb,sBACIqE,GAAG,UACHE,YAAU,UACVK,EAAE,0HACFN,UAAU,2BACVtE,KAAK,YAET,sBACIqE,GAAG,UACHE,YAAU,UACVK,EAAE,sMACFN,UAAU,0BACVtE,KAAK,YAET,sBACIqE,GAAG,UACHE,YAAU,UACVK,EAAE,uLACFN,UAAU,sBACVtE,KAAK,YAET,yBACIqE,GAAG,YACHE,YAAU,YACVC,GAAG,IACHC,GAAG,KACHC,GAAG,IACHC,GAAG,KACHL,UAAU,mBACVtE,KAAK,YAET,sBACIqE,GAAG,UACHE,YAAU,UACVK,EAAE,iMACFN,UAAU,2BACVtE,KAAK,YAET,sBACIqE,GAAG,UACHE,YAAU,UACVK,EAAE,yMACFN,UAAU,2BACVtE,KAAK,YAET,sBACIqE,GAAG,UACHE,YAAU,UACVK,EAAE,mLACFN,UAAU,2BACVtE,KAAK,YAET,sBACIqE,GAAG,UACHE,YAAU,UACVK,EAAE,6MACFN,UAAU,0BACVtE,KAAK,YAET,sBACIqE,GAAG,UACHE,YAAU,UACVK,EAAE,2HACFN,UAAU,2BACVtE,KAAK,YAET,yBACIqE,GAAG,YACHE,YAAU,YACVC,GAAG,MACHC,GAAG,IACHC,GAAG,MACHC,GAAG,IACHL,UAAU,mBACVtE,KAAK,YAET,yBACIqE,GAAG,YACHE,YAAU,YACVC,GAAG,MACHC,GAAG,MACHC,GAAG,MACHC,GAAG,MACHL,UAAU,mBACVtE,KAAK,YAET,sBACIqE,GAAG,UACHE,YAAU,UACVK,EAAE,6HACFN,UAAU,2BACVtE,KAAK,mBAvQzB,eA+QJ,cAAC6E,EAAA,EAAD,CAAahJ,UAAU,gBAAvB,SACI,eAACiJ,EAAA,EAAD,CACIC,QAAQ,WACRC,SAAUrB,EACVhE,MAAOtD,EAHX,UAKI,cAAC4I,EAAA,EAAD,CAAUtF,MAAM,YAAhB,uBACCxD,EAAUC,KAAI,SAACC,GAAD,OACX,cAAC4I,EAAA,EAAD,CAAUtF,MAAOtD,EAAQsD,MAAzB,SACKtD,EAAQoH,kBAO7B,sBAAK5H,UAAU,aAAf,UACI,cAAC,EAAD,CACIF,iBAAe,EACfF,OAAK,EACLD,OAAsB,UAAd4B,EACRtB,QAAS,SAAC8H,GAAD,OAAON,EAAa,UAC7BjI,MAAM,oBACNC,MAAO8C,EAAgBb,EAAY2H,YACnC3J,MAAO6C,EAAgBb,EAAYjC,SAEvC,cAAC,EAAD,CACIO,UAAU,qBACVL,OAAsB,cAAd4B,EACRtB,QAAS,SAAC8H,GAAD,OAAON,EAAa,cAC7BjI,MAAM,YACNC,MAAO8C,EAAgBb,EAAY4H,gBACnC5J,MAAO6C,EAAgBb,EAAYZ,aAEvC,cAAC,EAAD,CACId,UAAU,kBACVJ,OAAK,EACLD,OAAsB,WAAd4B,EACRtB,QAAS,SAAC8H,GAAD,OAAON,EAAa,WAC7BjI,MAAM,SACNC,MAAO8C,EAAgBb,EAAY6H,aACnC7J,MAAO6C,EAAgBb,EAAYX,aAG3C,cAAC,EAAD,CACIQ,UAAWA,EACXE,OAAQ0F,EACRzE,KAAM2E,EACN/G,UAAWiH,OAGnB,cAACxH,EAAA,EAAD,CAAMC,UAAU,aAAhB,SACI,eAACE,EAAA,EAAD,WACI,wDACA,cAAC,EAAD,CAAOI,UAAW0G,IAClB,qBAAIhH,UAAU,kBAAd,2BACmBuB,KAEnB,cAAC,EAAD,CACIvB,UAAU,aACVuB,UAAWA,YAK3B,cAAC,EAAD,QChaGiI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.354352fa.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nfunction InfoBox({\n    title,\n    cases,\n    total,\n    active,\n    isRed,\n    infoBox__casess,\n    ...props\n}) {\n    return (\n        <Card\n            className={`infoBox ${active && \"infoBox--selected\"} ${\n                isRed && \"infoBox--red\"\n            }`}\n            onClick={props.onClick}\n        >\n            <CardContent>\n                <Typography className=\"infoBox__title\" color=\"textSecondary\">\n                    <h3>{title}</h3>\n                </Typography>\n                <h2\n                    className={`infoBox__cases ${\n                        !isRed && \"infoBox__cases--green\"\n                    }`}\n                >\n                    {cases}\n                </h2>\n                <Typography className=\"infoBox__total\" color=\"textSecondary\">\n                    <h3>{total} Total</h3>\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default InfoBox;\n","import numeral from \"numeral\";\nimport React from \"react\";\nimport \"./App.css\";\n\nfunction Table({ countries }) {\n    return (\n        <div className=\"table\">\n            {countries.map((country) => (\n                <tr>\n                    <td>{country.country}</td>\n                    <td>\n                        <strong>{numeral(country.cases).format(\"0,0\")}</strong>\n                    </td>\n                </tr>\n            ))}\n        </div>\n    );\n}\n\nexport default Table;\n","import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nconst casesTypeColors = {\n    cases: {\n        hex: \"#CC1034\",\n        multiplier: 800,\n    },\n    recovered: {\n        hex: \"#7dd71d\",\n        multiplier: 1200,\n    },\n    deaths: {\n        hex: \"#fb4443\",\n        multiplier: 2000,\n    },\n};\n\nexport const sortData = (data) => {\n    const sortedData = [...data];\n\n    sortedData.sort((a, b) => {\n        if (a.cases > b.cases) {\n            return -1;\n        } else {\n            return 1;\n        }\n    });\n    return sortedData;\n};\n//Draw cirle on map with interrative tooltip\nexport const showDataOnMap = (data, casesType = \"cases\") =>\n    data.map((country) => (\n        <Circle\n            center={[country.countryInfo.lat, country.countryInfo.long]}\n            fillOpacity={0.4}\n            pathOptions={{\n                color: casesTypeColors[casesType].hex,\n                fillColor: casesTypeColors[casesType].hex,\n            }}\n            // color={casesTypeColors[casesType].hex}\n            // fillColor={casesTypeColors[casesType].hex}\n            radius={\n                Math.sqrt(country[casesType] / 5) *\n                casesTypeColors[casesType].multiplier\n            }\n        >\n            <Popup>\n                <div className=\"info-container\">\n                    <div\n                        className=\"info-flag\"\n                        style={{\n                            backgroundImage: `url(${country.countryInfo.flag})`,\n                        }}\n                    />\n                    <div className=\"info-name\">{country.country}</div>\n                    <div className=\"info-confirmed\">\n                        Cases : {numeral(country.cases).format(\"0,0\")}\n                    </div>\n                    <div className=\"info-recovered\">\n                        Recovered : {numeral(country.recovered).format(\"0,0\")}\n                    </div>\n                    <div className=\"info-deaths\">\n                        Deaths : {numeral(country.deaths).format(\"0,0\")}\n                    </div>\n                </div>\n            </Popup>\n        </Circle>\n    ));\n\nexport const prettyPrintStat = (stat) =>\n    stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n","import React, { useState } from \"react\";\nimport { MapContainer as LeafletMap, TileLayer } from \"react-leaflet\";\nimport { showDataOnMap } from \"./util\";\n\nfunction Map({ countries, casesType, center, zoom }) {\n    const [map, setmap] = useState(null);\n    if (map) {\n        map.flyTo(center, zoom);\n    }\n    return (\n        <div className=\"map\">\n            <LeafletMap center={center} zoom={zoom} whenCreated={setmap}>\n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                {showDataOnMap(countries, casesType)}\n            </LeafletMap>\n        </div>\n    );\n}\n\nexport default Map;\n","import numeral from \"numeral\";\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst COLORS = [\"#cc103285\", \"#7dd71d85\", \"#fb434385\"];\nconst BORDER_COLOR = [\"#cc1032\", \"#72c51a\", \"#fb4343\"];\n\nconst options = {\n    plugins: {\n        legend: {\n            display: false,\n        },\n        tooltips: {\n            mode: \"index\",\n            intersect: false,\n            callbacks: {\n                label: function (tooltipItem, data) {\n                    return numeral(tooltipItem.value).format(\"+0,0\");\n                },\n            },\n        },\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    elements: {\n        line: {\n            fill: true,\n        },\n        point: {\n            hitRadius: 100,\n            radius: 0,\n        },\n    },\n    scales: {\n        xAxes: [\n            {\n                gridLines: {\n                    display: false,\n                },\n                type: \"time\",\n                time: {\n                    format: \"MM/DD/YY\",\n                    tooltipFormat: \"ll\",\n                },\n            },\n        ],\n        yAxes: [\n            {\n                gridLines: {\n                    display: false,\n                },\n                ticks: {\n                    //Include dollar sign in ticks\n                    callback: function (value, index, values) {\n                        return numeral(value).format(\"0.0a\");\n                    },\n                },\n            },\n        ],\n    },\n};\n\nconst buildChartData = (data, casesType) => {\n    const chartData = [];\n    let lastDataPoint;\n    for (let date in data.cases) {\n        if (lastDataPoint) {\n            const newDataPoint = {\n                x: date,\n                y: data[casesType][date] - lastDataPoint,\n            };\n            chartData.push(newDataPoint);\n        }\n        lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n};\n\nfunction LineGraph({ casesType = \"cases\", ...props }) {\n    const ChartColor = () => {\n        if (casesType === \"cases\") {\n            return COLORS[0];\n        } else if (casesType === \"recovered\") {\n            return COLORS[1];\n        } else {\n            return COLORS[2];\n        }\n    };\n    const ChartBorderColor = () => {\n        if (casesType === \"cases\") {\n            return BORDER_COLOR[0];\n        } else if (casesType === \"recovered\") {\n            return BORDER_COLOR[1];\n        } else {\n            return BORDER_COLOR[2];\n        }\n    };\n\n    const [data, setData] = useState({});\n    useEffect(() => {\n        getHistoricalData();\n    }, [casesType]);\n\n    const getHistoricalData = async () => {\n        const response = await fetch(\n            \"https://disease.sh/v3/covid-19/historical/all?lastdays=120\"\n        );\n        const data = await response.json();\n        let chartData = buildChartData(data, casesType);\n        setData(chartData);\n    };\n\n    return (\n        <div className={props.className}>\n            {data?.length > 0 && (\n                <Line\n                    options={options}\n                    data={{\n                        datasets: [\n                            {\n                                backgroundColor: ChartColor(),\n                                borderColor: ChartBorderColor(),\n                                tension: 0.1,\n                                data: data,\n                            },\n                        ],\n                    }}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default LineGraph;\n","import React from \"react\";\n\nexport const Footer = () => {\n    return (\n        <div>\n            <footer>\n                <h3 style={{ marginLeft: \"20px\" }}>Made with 💙</h3>\n                <div>\n                    <h1>\n                        <a href=\"https://github.com/JD235\" target=\"_blank\">\n                            <i\n                                class=\"fa fa-github fa-lg\"\n                                aria-hidden=\"true\"\n                            ></i>\n                        </a>\n                    </h1>\n                </div>\n                <div className=\"lists\" style={{ marginRight: \"20px\" }}>\n                    <h3>Build with:</h3>\n                    <ul>\n                        <li>\n                            <a href=\"https://reactjs.org/\">React.js</a>\n                        </li>\n                        <li>\n                            <a href=\"https://www.chartjs.org/\">Chart.js</a>\n                        </li>\n                        <li>\n                            <a href=\"https://leafletjs.com/\">Leaflet.js</a>\n                        </li>\n                    </ul>\n                </div>\n            </footer>\n        </div>\n    );\n};\n\nexport default Footer;\n","import {\n    Card,\n    CardContent,\n    FormControl,\n    MenuItem,\n    Select,\n} from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport InfoBox from \"./InfoBox\";\nimport Table from \"./Table\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\nimport { prettyPrintStat, sortData } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n    const [countries, setCountries] = useState([]);\n    const [country, setCountry] = useState(\"worldwide\");\n    const [countryInfo, setCountryInfo] = useState({});\n    const [tableData, setTableData] = useState([]);\n    const [mapCenter, setMapCenter] = useState({\n        lat: 34.80746,\n        lng: -40.4796,\n    });\n    const [mapZoom, setMapZoom] = useState(3);\n    const [mapCountries, setMapCountries] = useState([]);\n    const [casesType, setCasesType] = useState(\"cases\");\n\n    useEffect(() => {\n        getCountriesData();\n        getAllCountriesData();\n    }, []);\n\n    const getAllCountriesData = async () => {\n        const response = await fetch(\"https://disease.sh/v3/covid-19/all\");\n        const data = await response.json();\n        setCountryInfo(data);\n    };\n\n    const getCountriesData = async () => {\n        const response = await fetch(\n            \"https://disease.sh/v3/covid-19/countries\"\n        );\n        const data = await response.json();\n        setCountries(\n            data.map((country) => ({\n                name: country.country,\n                value: country.countryInfo.iso2,\n            }))\n        );\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setMapCountries(data);\n    };\n\n    const onCountryChange = async (e) => {\n        const countryCode = e.target.value;\n        setCountry(countryCode);\n        console.log(e.target.value + \" gand\");\n        const url =\n            countryCode === \"worldwide\"\n                ? \"https://disease.sh/v3/covid-19/all\"\n                : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n        await fetch(url)\n            .then((response) => response.json())\n            .then((data) => {\n                setCountry(countryCode);\n                //All the data from the country response\n                setCountryInfo(data);\n                const worldwideLatLng = {\n                    lat: 34.80746,\n                    lng: -40.4796,\n                };\n                setMapCenter(\n                    countryCode === \"worldwide\"\n                        ? worldwideLatLng\n                        : [data.countryInfo.lat, data.countryInfo.long]\n                );\n                console.log(data.countryInfo + \" --- \" + countryCode);\n                setMapZoom(countryCode === \"worldwide\" ? 3 : 4);\n            });\n    };\n\n    return (\n        <div className=\"main\">\n            <div className=\"app\">\n                <div className=\"app__left\">\n                    <div className=\"app__header\">\n                        <div className=\"covid\">\n                            <h1>\n                                COVID-19\n                                <span>\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        width=\"50\"\n                                        height=\"40\"\n                                        viewBox=\"0 0 145 145\"\n                                    >\n                                        <g\n                                            id=\"covid\"\n                                            transform=\"translate(-10 -5)\"\n                                        >\n                                            <ellipse\n                                                id=\"Ellipse_1\"\n                                                data-name=\"Ellipse 1\"\n                                                cx=\"46\"\n                                                cy=\"45\"\n                                                rx=\"46\"\n                                                ry=\"45\"\n                                                transform=\"translate(30 30)\"\n                                                fill=\"#ffb8a5\"\n                                            />\n                                            <path\n                                                id=\"Path_6\"\n                                                data-name=\"Path 6\"\n                                                d=\"M71.765,13.822A46.026,46.026,0,0,1,13.476,68.01,46.041,46.041,0,1,0,71.765,13.822Z\"\n                                                transform=\"translate(17.069 17.409)\"\n                                                fill=\"#ffa68e\"\n                                            />\n                                            <path\n                                                id=\"Path_7\"\n                                                data-name=\"Path 7\"\n                                                d=\"M28.114,76.4c1-2.143,4.828-3.742,9.419-3.742s8.416,1.6,9.419,3.742L44.7,67.383a77.629,77.629,0,0,1-2.315-18.811v-.148A2.424,2.424,0,0,0,39.957,46H35.109a2.424,2.424,0,0,0-2.424,2.424v.148a77.62,77.62,0,0,1-2.314,18.807Z\"\n                                                transform=\"translate(37.911 63.225)\"\n                                                fill=\"#ff7956\"\n                                            />\n                                            <path\n                                                id=\"Path_8\"\n                                                data-name=\"Path 8\"\n                                                d=\"M41.347,58.885l1.13,6.7a11.77,11.77,0,0,1,6.263-7.272,11.753,11.753,0,0,1,9.431-1.789l-5.238-4.3a57.662,57.662,0,0,1-5.211-4.8A42.739,42.739,0,0,1,39.82,52a65.711,65.711,0,0,1,1.527,6.884Z\"\n                                                transform=\"translate(54.578 65.247)\"\n                                                fill=\"#ff5023\"\n                                            />\n                                            <path\n                                                id=\"Path_9\"\n                                                data-name=\"Path 9\"\n                                                d=\"M57.635,44,64,46.375a11.782,11.782,0,0,1-3.156-9.053,11.751,11.751,0,0,1,3.168-9.06l-6.358,2.375a57.228,57.228,0,0,1-6.763,2.114,42.786,42.786,0,0,1,.017,9.135A65.451,65.451,0,0,1,57.635,44Z\"\n                                                transform=\"translate(70.346 37.969)\"\n                                                fill=\"#ff5023\"\n                                            />\n                                            <path\n                                                id=\"Path_10\"\n                                                data-name=\"Path 10\"\n                                                d=\"M14.073,44,7.71,46.375a11.782,11.782,0,0,0,3.151-9.053,11.751,11.751,0,0,0-3.168-9.06l6.358,2.375a57.229,57.229,0,0,0,6.763,2.114,42.786,42.786,0,0,0-.017,9.135A65.438,65.438,0,0,0,14.073,44Z\"\n                                                transform=\"translate(8.834 37.969)\"\n                                                fill=\"#ff5023\"\n                                            />\n                                            <path\n                                                id=\"Path_11\"\n                                                data-name=\"Path 11\"\n                                                d=\"M16.614,56.515a11.79,11.79,0,0,1,9.419,1.8A11.751,11.751,0,0,1,32.3,65.582l1.12-6.695a57.666,57.666,0,0,1,1.549-6.906,44.357,44.357,0,0,1-7.914-4.552,65.441,65.441,0,0,1-5.194,4.763Z\"\n                                                transform=\"translate(21.537 65.261)\"\n                                                fill=\"#ff5023\"\n                                            />\n                                            <path\n                                                id=\"Path_12\"\n                                                data-name=\"Path 12\"\n                                                d=\"M33.433,15.786l-1.13-6.7a11.782,11.782,0,0,1-6.263,7.259,11.753,11.753,0,0,1-9.431,1.789l5.238,4.317a57.662,57.662,0,0,1,5.211,4.8,42.74,42.74,0,0,1,7.9-4.581,65.713,65.713,0,0,1-1.527-6.884Z\"\n                                                transform=\"translate(21.529 10.666)\"\n                                                fill=\"#ff5023\"\n                                            />\n                                            <path\n                                                id=\"Path_13\"\n                                                data-name=\"Path 13\"\n                                                d=\"M47.734,27.238a65.443,65.443,0,0,1,5.194-4.763l5.238-4.327a11.79,11.79,0,0,1-9.419-1.8,11.751,11.751,0,0,1-6.263-7.272l-1.12,6.692a57.6,57.6,0,0,1-1.549,6.908,44.356,44.356,0,0,1,7.914,4.552Z\"\n                                                transform=\"translate(54.571 10.658)\"\n                                                fill=\"#ff5023\"\n                                            />\n                                            <path\n                                                id=\"Path_14\"\n                                                data-name=\"Path 14\"\n                                                d=\"M37.533,9.2c-4.591,0-8.416-1.6-9.419-3.742l2.257,9.022a77.628,77.628,0,0,1,2.315,18.811v.148a2.424,2.424,0,0,0,2.424,2.424h4.848a2.424,2.424,0,0,0,2.424-2.424v-.148a77.62,77.62,0,0,1,2.314-18.807l2.258-9.026C45.949,7.6,42.124,9.2,37.533,9.2Z\"\n                                                transform=\"translate(37.911 5.497)\"\n                                                fill=\"#ff7956\"\n                                            />\n                                            <path\n                                                id=\"Path_15\"\n                                                data-name=\"Path 15\"\n                                                d=\"M15.019,25.392c-2.3,3.978-5.594,6.489-7.95,6.285l8.942,2.56a77.5,77.5,0,0,1,17.452,7.4l.128.073a2.424,2.424,0,0,0,3.311-.887l2.424-4.2a2.424,2.424,0,0,0-.887-3.311l-.128-.073A77.709,77.709,0,0,1,23.175,21.829L16.49,15.362C17.843,17.3,17.324,21.414,15.019,25.392Z\"\n                                                transform=\"translate(7.946 19.602)\"\n                                                fill=\"#ff7956\"\n                                            />\n                                            <path\n                                                id=\"Path_16\"\n                                                data-name=\"Path 16\"\n                                                d=\"M15.019,54.276c2.3,3.978,2.824,8.088,1.469,10.03l6.685-6.467A77.708,77.708,0,0,1,38.308,46.428l.128-.073a2.424,2.424,0,0,0,.887-3.311l-2.424-4.2a2.424,2.424,0,0,0-3.311-.887l-.128.073a77.5,77.5,0,0,1-17.452,7.4l-8.939,2.56c2.356-.2,5.65,2.307,7.95,6.285Z\"\n                                                transform=\"translate(7.946 51.313)\"\n                                                fill=\"#ff7956\"\n                                            />\n                                            <path\n                                                id=\"Path_17\"\n                                                data-name=\"Path 17\"\n                                                d=\"M68.12,54.276c2.3-3.978,5.594-6.489,7.95-6.285l-8.942-2.56a77.5,77.5,0,0,1-17.452-7.4l-.128-.073a2.424,2.424,0,0,0-3.311.887l-2.424,4.2a2.424,2.424,0,0,0,.887,3.311l.128.073A77.709,77.709,0,0,1,59.964,57.839l6.685,6.467c-1.353-1.942-.834-6.052,1.471-10.03Z\"\n                                                transform=\"translate(59.802 51.313)\"\n                                                fill=\"#ff7956\"\n                                            />\n                                            <path\n                                                id=\"Path_18\"\n                                                data-name=\"Path 18\"\n                                                d=\"M68.119,25.392c-2.3-3.978-2.824-8.088-1.469-10.03l-6.685,6.467A77.709,77.709,0,0,1,44.831,33.24l-.128.073a2.424,2.424,0,0,0-.887,3.311l2.424,4.2a2.424,2.424,0,0,0,3.311.887l.128-.073a77.5,77.5,0,0,1,17.452-7.4l8.942-2.56c-2.358.2-5.652-2.308-7.953-6.285Z\"\n                                                transform=\"translate(59.804 19.602)\"\n                                                fill=\"#ff7956\"\n                                            />\n                                            <g\n                                                id=\"Group_1\"\n                                                data-name=\"Group 1\"\n                                                transform=\"translate(12.355 5)\"\n                                            >\n                                                <path\n                                                    id=\"Path_19\"\n                                                    data-name=\"Path 19\"\n                                                    d=\"M37.7,3C32.341,3,28,5.181,28,7.848a2.606,2.606,0,0,0,.276,1.105C29.28,11.1,33.1,12.7,37.7,12.7s8.416-1.6,9.419-3.742a2.606,2.606,0,0,0,.276-1.105C47.391,5.181,43.05,3,37.7,3Z\"\n                                                    transform=\"translate(25.393 -3)\"\n                                                    fill=\"#ed1c24\"\n                                                />\n                                                <path\n                                                    id=\"Path_20\"\n                                                    data-name=\"Path 20\"\n                                                    d=\"M8.184,21.211c-2.666,4.637-2.967,9.482-.65,10.82a2.606,2.606,0,0,0,1.1.313c2.356.2,5.655-2.308,7.95-6.285s2.824-8.088,1.469-10.03a2.6,2.6,0,0,0-.819-.79c-2.317-1.338-6.367,1.336-9.046,5.972Z\"\n                                                    transform=\"translate(-5.97 13.935)\"\n                                                    fill=\"#ed1c24\"\n                                                />\n                                                <path\n                                                    id=\"Path_21\"\n                                                    data-name=\"Path 21\"\n                                                    d=\"M8.185,53.046c2.678,4.637,6.729,7.31,9.046,5.972a2.6,2.6,0,0,0,.819-.79c1.355-1.939.829-6.06-1.469-10.03s-5.594-6.489-7.95-6.285a2.606,2.606,0,0,0-1.1.313c-2.317,1.338-2.026,6.183.65,10.82Z\"\n                                                    transform=\"translate(-5.972 52.391)\"\n                                                    fill=\"#ed1c24\"\n                                                />\n                                                <path\n                                                    id=\"Path_22\"\n                                                    data-name=\"Path 22\"\n                                                    d=\"M37.7,66.7c5.354,0,9.7-2.181,9.7-4.848a2.606,2.606,0,0,0-.276-1.105C46.111,58.6,42.286,57,37.7,57s-8.416,1.6-9.419,3.742A2.606,2.606,0,0,0,28,61.848C28,64.526,32.341,66.7,37.7,66.7Z\"\n                                                    transform=\"translate(25.393 73.888)\"\n                                                    fill=\"#ed1c24\"\n                                                />\n                                                <path\n                                                    id=\"Path_23\"\n                                                    data-name=\"Path 23\"\n                                                    d=\"M63.343,53.047c2.666-4.637,2.967-9.482.65-10.82a2.605,2.605,0,0,0-1.1-.313c-2.356-.2-5.655,2.307-7.95,6.285s-2.824,8.088-1.469,10.03a2.6,2.6,0,0,0,.819.79c2.317,1.338,6.367-1.336,9.046-5.972Z\"\n                                                    transform=\"translate(60.621 52.391)\"\n                                                    fill=\"#ed1c24\"\n                                                />\n                                                <path\n                                                    id=\"Path_24\"\n                                                    data-name=\"Path 24\"\n                                                    d=\"M63.343,21.211c-2.678-4.637-6.729-7.31-9.046-5.972a2.6,2.6,0,0,0-.819.79c-1.355,1.939-.829,6.06,1.469,10.03s5.594,6.489,7.95,6.285a2.606,2.606,0,0,0,1.1-.313c2.317-1.338,2.026-6.183-.65-10.82Z\"\n                                                    transform=\"translate(60.62 13.935)\"\n                                                    fill=\"#ed1c24\"\n                                                />\n                                                <ellipse\n                                                    id=\"Ellipse_2\"\n                                                    data-name=\"Ellipse 2\"\n                                                    cx=\"10.5\"\n                                                    cy=\"5.5\"\n                                                    rx=\"10.5\"\n                                                    ry=\"5.5\"\n                                                    transform=\"translate(52.645 65)\"\n                                                    fill=\"#ed1c24\"\n                                                />\n                                            </g>\n                                            <path\n                                                id=\"Path_25\"\n                                                data-name=\"Path 25\"\n                                                d=\"M49.348,41.059c2.666-4.637,2.967-9.482.65-10.82s-6.37,1.336-9.046,5.972-2.969,9.482-.65,10.82S46.67,45.7,49.348,41.059Z\"\n                                                transform=\"translate(53.037 40.293)\"\n                                                fill=\"#d80027\"\n                                            />\n                                            <path\n                                                id=\"Path_26\"\n                                                data-name=\"Path 26\"\n                                                d=\"M33.031,9.268c-1.338-2.317-6.183-2.026-10.82.65s-7.31,6.729-5.972,9.046A2.812,2.812,0,0,0,17.627,20.1a11.753,11.753,0,0,0,9.431-1.789,11.782,11.782,0,0,0,6.263-7.259,2.836,2.836,0,0,0-.291-1.786Z\"\n                                                transform=\"translate(20.511 8.697)\"\n                                                fill=\"#d80027\"\n                                            />\n                                            <path\n                                                id=\"Path_27\"\n                                                data-name=\"Path 27\"\n                                                d=\"M11.544,28.642A2.824,2.824,0,0,0,9.848,28C7.181,28,5,32.341,5,37.7s2.169,9.7,4.848,9.7a2.841,2.841,0,0,0,1.682-.635A11.758,11.758,0,0,0,14.7,37.7,11.782,11.782,0,0,0,11.544,28.642Z\"\n                                                transform=\"translate(5 37.596)\"\n                                                fill=\"#ed1c24\"\n                                            />\n                                            <ellipse\n                                                id=\"Ellipse_3\"\n                                                data-name=\"Ellipse 3\"\n                                                cx=\"5\"\n                                                cy=\"10\"\n                                                rx=\"5\"\n                                                ry=\"10\"\n                                                transform=\"translate(47 65)\"\n                                                fill=\"#ed1c24\"\n                                            />\n                                            <path\n                                                id=\"Path_28\"\n                                                data-name=\"Path 28\"\n                                                d=\"M27.059,53.157a11.79,11.79,0,0,0-9.419-1.8,2.833,2.833,0,0,0-1.4,1.146c-1.338,2.317,1.336,6.367,5.972,9.046s9.482,2.967,10.82.65a2.833,2.833,0,0,0,.291-1.774,11.751,11.751,0,0,0-6.263-7.272Z\"\n                                                transform=\"translate(20.511 70.415)\"\n                                                fill=\"#ed1c24\"\n                                            />\n                                            <path\n                                                id=\"Path_29\"\n                                                data-name=\"Path 29\"\n                                                d=\"M58.021,52.507a2.826,2.826,0,0,0-1.389-1.139A11.753,11.753,0,0,0,47.2,53.157a11.77,11.77,0,0,0-6.263,7.272,2.836,2.836,0,0,0,.291,1.786c1.338,2.317,6.183,2.026,10.82-.65S59.359,54.824,58.021,52.507Z\"\n                                                transform=\"translate(56.117 70.415)\"\n                                                fill=\"#ed1c24\"\n                                            />\n                                            <path\n                                                id=\"Path_30\"\n                                                data-name=\"Path 30\"\n                                                d=\"M59.872,28a2.841,2.841,0,0,0-1.682.635,11.758,11.758,0,0,0-3.166,9.06,11.79,11.79,0,0,0,3.151,9.053,2.836,2.836,0,0,0,1.7.642c2.666,0,4.848-4.341,4.848-9.7S62.551,28,59.872,28Z\"\n                                                transform=\"translate(76.168 37.596)\"\n                                                fill=\"#ed1c24\"\n                                            />\n                                            <path\n                                                id=\"Path_31\"\n                                                data-name=\"Path 31\"\n                                                d=\"M52.048,9.916c-4.637-2.666-9.482-2.967-10.82-.65a2.833,2.833,0,0,0-.291,1.774A11.751,11.751,0,0,0,47.2,18.312a11.79,11.79,0,0,0,9.419,1.8,2.833,2.833,0,0,0,1.4-1.146c1.338-2.317-1.336-6.367-5.972-9.046Z\"\n                                                transform=\"translate(56.117 8.699)\"\n                                                fill=\"#ed1c24\"\n                                            />\n                                            <path\n                                                id=\"Path_32\"\n                                                data-name=\"Path 32\"\n                                                d=\"M44.059,22.916c-4.637-2.666-9.482-2.967-10.82-.65s1.336,6.37,5.972,9.046,9.482,2.969,10.82.65S48.7,25.594,44.059,22.916Z\"\n                                                transform=\"translate(44.716 27.209)\"\n                                                fill=\"#ed1c24\"\n                                            />\n                                            <ellipse\n                                                id=\"Ellipse_4\"\n                                                data-name=\"Ellipse 4\"\n                                                cx=\"7.5\"\n                                                cy=\"5\"\n                                                rx=\"7.5\"\n                                                ry=\"5\"\n                                                transform=\"translate(80 94)\"\n                                                fill=\"#d80027\"\n                                            />\n                                            <ellipse\n                                                id=\"Ellipse_5\"\n                                                data-name=\"Ellipse 5\"\n                                                cx=\"6.5\"\n                                                cy=\"4.5\"\n                                                rx=\"6.5\"\n                                                ry=\"4.5\"\n                                                transform=\"translate(57 90)\"\n                                                fill=\"#d80027\"\n                                            />\n                                            <path\n                                                id=\"Path_33\"\n                                                data-name=\"Path 33\"\n                                                d=\"M28.58,21.84c-2.344,1.294-5.316,5.415-4.021,7.756s6.367,2.021,8.709.727,5.316-5.415,4.021-7.756S30.924,20.544,28.58,21.84Z\"\n                                                transform=\"translate(32.401 27.395)\"\n                                                fill=\"#ed1c24\"\n                                            />\n                                        </g>\n                                    </svg>\n                                </span>\n                                TRACKER\n                            </h1>\n                        </div>\n                        <FormControl className=\"app__dropdown\">\n                            <Select\n                                variant=\"outlined\"\n                                onChange={onCountryChange}\n                                value={country}\n                            >\n                                <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n                                {countries.map((country) => (\n                                    <MenuItem value={country.value}>\n                                        {country.name}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n\n                    <div className=\"app__stats\">\n                        <InfoBox\n                            infoBox__casess\n                            isRed\n                            active={casesType === \"cases\"}\n                            onClick={(e) => setCasesType(\"cases\")}\n                            title=\"Coronavirus cases\"\n                            cases={prettyPrintStat(countryInfo.todayCases)}\n                            total={prettyPrintStat(countryInfo.cases)}\n                        />\n                        <InfoBox\n                            className=\"infoBox__recovered\"\n                            active={casesType === \"recovered\"}\n                            onClick={(e) => setCasesType(\"recovered\")}\n                            title=\"Recovered\"\n                            cases={prettyPrintStat(countryInfo.todayRecovered)}\n                            total={prettyPrintStat(countryInfo.recovered)}\n                        />\n                        <InfoBox\n                            className=\"infoBox__deaths\"\n                            isRed\n                            active={casesType === \"deaths\"}\n                            onClick={(e) => setCasesType(\"deaths\")}\n                            title=\"Deaths\"\n                            cases={prettyPrintStat(countryInfo.todayDeaths)}\n                            total={prettyPrintStat(countryInfo.deaths)}\n                        />\n                    </div>\n                    <Map\n                        casesType={casesType}\n                        center={mapCenter}\n                        zoom={mapZoom}\n                        countries={mapCountries}\n                    />\n                </div>\n                <Card className=\"app__right\">\n                    <CardContent>\n                        <h3>Total Cases by Country</h3>\n                        <Table countries={tableData} />\n                        <h3 className=\"app__graphTitle\">\n                            Worldwide new {casesType}\n                        </h3>\n                        <LineGraph\n                            className=\"app__graph\"\n                            casesType={casesType}\n                        />\n                    </CardContent>\n                </Card>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}